class Event():h#ttps://www.educba.com/python-event-handler/ for more on event handling
    events=[]
    def __init__(self):
        return None
    def subscribe(self,new_event):
        Event.events.append(new_event)
    def unsubscribe(self,new_event):
        Event.events.remove(new_event)
    @classmethod
    def emit(cls,*args):
        for events in cls.events:
            events(*args)

        
class Testf():
    def __init__(self):
        self.calls=0
        self.args=[]
    def __call__(self,*args):
        self.calls+=1
        self.args+=args

event=Event()
f=Testf()
num= lambda x: x+3
event.subscribe(f)
event.emit(1,"foo",True)
print(f.args)
event.unsubscribe(f)
event.emit(2)#only 1 new argument sent to f hence calls should give 1
print(f.calls)
